@model List<LedgerReport>
<html>
    <body>


@if (Model != null && Model.Any())
{
    TempData.Keep("ReportData");

    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Particulars</th>
                <th>Voucher No</th>
                <th>Debit</th>
                <th>Credit</th>
                <th>Balance</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.TransactionDate.ToShortDateString()</td>
                    <td>@item.Particulars</td>
                    <td>@item.VoucherNo</td>
                    <td>@item.DebitAmount</td>
                    <td>@item.CreditAmount</td>
                    <td>@item.Balance</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No data available for the selected ledger.</p>
}

<h4 class="mt-5">Ledger Chart: Debit vs Credit</h4>
<canvas id="ledgerChart" height="100"></canvas>

    <form id="exportForm" method="post" asp-action="ExportToPdf" asp-controller="Ledger">
        <input type="hidden" id="ChartImage" name="ChartImage" />
        <button type="submit" class="btn btn-danger mt-3">Download PDF</button>
    </form>


@* <a href="@Url.Action("ExportToPdf", "Ledger")" class="btn btn-danger">Download PDF</a> *@
</body>
</html>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

@section Scripts {
    <script>
                document.getElementById('exportForm').addEventListener('submit', function () {
            const chartImage = document.getElementById('ledgerChart').toDataURL("image/png");
            document.getElementById('ChartImage').value = chartImage;
        });


        const labels = [];
        const debitData = [];
        const creditData = [];

        @foreach (var item in Model)
        {
                <text>
                    labels.push("@item.TransactionDate.ToString("yyyy-MM-dd")");
                    debitData.push(@item.DebitAmount);
                    creditData.push(@item.CreditAmount);
                </text>
        }

        const ctx = document.getElementById('ledgerChart').getContext('2d');
        const ledgerChart = new Chart(ctx, {
            type: 'bar', // you can also try 'line'
            data: {
                labels: labels,
                datasets: [
                    {
                        label: 'Debit',
                        data: debitData,
                        backgroundColor: 'rgba(255, 99, 132, 0.5)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1
                    },
                    {
                        label: 'Credit',
                        data: creditData,
                        backgroundColor: 'rgba(54, 162, 235, 0.5)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1
                    }
                ]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
}

